{"remainingRequest":"E:\\node\\vue\\travel\\node_modules\\thread-loader\\dist\\cjs.js!E:\\node\\vue\\travel\\node_modules\\babel-loader\\lib\\index.js!E:\\node\\vue\\travel\\node_modules\\eslint-loader\\index.js??ref--13-0!E:\\node\\vue\\travel\\src\\store\\index.js","dependencies":[{"path":"E:\\node\\vue\\travel\\src\\store\\index.js","mtime":1533717514787},{"path":"E:\\node\\vue\\travel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1532585615200},{"path":"E:\\node\\vue\\travel\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1532585621048},{"path":"E:\\node\\vue\\travel\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"E:\\node\\vue\\travel\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport state from './state';\nimport mutations from './mutations';\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: state,\n  // actions: {\n  //     changeCity(ctx, city) {\n  //         ctx.commit('changeCity',city);\n  //     }\n  // },\n  mutations: mutations // getters: {\n  //     doubleCity(state) {\n  //         return state.city + ' ' + state.city;\n  //     }\n  // }\n\n});",{"version":3,"sources":["src\\store\\index.js"],"names":["Vue","Vuex","state","mutations","use","Store"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACAH,IAAII,GAAJ,CAAQH,IAAR;AAIA,eAAe,IAAIA,KAAKI,KAAT,CAAe;AAC1BH,cAD0B;AAE1B;AACA;AACA;AACA;AACA;AACAC,sBAP0B,CAQ1B;AACA;AACA;AACA;AACA;;AAZ0B,CAAf,CAAf","sourceRoot":"E:\\node\\vue\\travel","sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport state from './state'\r\nimport mutations from './mutations'\r\nVue.use(Vuex);\r\n\r\n\r\n\r\nexport default new Vuex.Store({\r\n    state,\r\n    // actions: {\r\n    //     changeCity(ctx, city) {\r\n    //         ctx.commit('changeCity',city);\r\n    //     }\r\n    // },\r\n    mutations,\r\n    // getters: {\r\n    //     doubleCity(state) {\r\n    //         return state.city + ' ' + state.city;\r\n    //     }\r\n    // }\r\n\r\n});"]}]}